package com.ddtinfotech.tipcalculator

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import com.ddtinfotech.tipcalculator.databinding.ActivityMainBinding
import java.text.NumberFormat

class MainActivity : AppCompatActivity() {

    lateinit var binding: ActivityMainBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

//        it specifies the root of the views / parent
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

//        setting click listner to the calculate button
        binding.btnCalculate.setOnClickListener { calculateTip() }

    }

    fun calculateTip() {
        val stringInput = binding.editText.text.toString()
        val cost = stringInput.toDoubleOrNull()
        if(cost == null){
            binding.txtFinalTip.text = ""
            return
        }
        val selectedTip = binding.optionsForTip.checkedRadioButtonId

        val percentageTip = when (selectedTip) {
            R.id.optionTenPercent -> 0.10;
            R.id.optionFifteenPercent -> 0.15;
            else -> 0.20;
        }

        var finalTip = cost * percentageTip

        val roundUp = binding.roundOfSwitch.isChecked
        if (roundUp) {
            finalTip = kotlin.math.ceil(finalTip)
        }
        val formattedCurrency = NumberFormat.getCurrencyInstance().format(finalTip)
        binding.txtFinalTip.text = getString(R.string.tip_amount, formattedCurrency)

    }

}

/*
The name of the binding class is generated by converting the name
of the XML file to Pascal case and adding the word "Binding" to the end.
 Similarly, the reference for each view is generated by removing
  underscores and converting the view name to camel case.
  For example, in Pascal case activity_main.xml becomes
   ActivityMainBinding, and you can access @id/text_view as
   binding.textView.
 */